services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_sm_data:/var/lib/postgresql/data
    networks:
      - app-network
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin-data:/var/lib/pgadmin  
    networks:
      - app-network
  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - app-network  
  caddy:
    image: caddy:latest
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    expose:
      - 2019  # Caddy admin API port
  caddy-ui:
    image: qmcgaw/caddy-ui:latest
    ports:
      - "4000:8000"  # Change as needed
    environment:
      - CADDY_API_ENDPOINT=http://caddy:2019
    depends_on:
      - caddy
    networks:
      - app-network
  notifications:
    build:
      context: ./notifications
      args:
        VERSION: ${NOTIFICATIONS_VERSION}
    container_name: notifications_${NOTIFICATIONS_VERSION}
    restart: always
    depends_on:
      - postgres
      - redis
    env_file:
      - ./notifications/.env
    ports:
      - "8082:8080"    
volumes:
  postgres_sm_data:
    driver: local
  pgadmin-data:
    driver: local
  caddy_data:
    driver: local
  caddy_config:  
    driver: local
networks:
  app-network:
    driver: bridge